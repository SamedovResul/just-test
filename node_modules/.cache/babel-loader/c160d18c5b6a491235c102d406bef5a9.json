{"ast":null,"code":"import _slicedToArray from \"/Users/Gadimlie/Desktop/react-entesk/entesk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Gadimlie/Desktop/react-entesk/entesk/src/component/ContactSection.jsx\";\n\nimport React, { useRef, useState } from 'react';\nimport functions from './functions';\nimport toast from 'react-hot-toast';\n\nvar ContactSection = function ContactSection(_ref) {\n  var myRef = _ref.myRef;\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      contactData = _useState2[0],\n      setContactData = _useState2[1];\n\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  console.log(re.test(contactData.email));\n\n  var submitHandler = function submitHandler() {\n    if (re.test(contactData.email)) {\n      if (contactData.name && contactData.phone) {\n        var xhttp = new XMLHttpRequest(); // xhttp.open(\"POST\", \"https://infinite-castle-76696.herokuapp.com/send\");\n\n        xhttp.open(\"POST\", \"https://infinite-castle-76696.herokuapp.com/send\");\n        xhttp.setRequestHeader(\"Content-type\", 'application/json');\n        xhttp.send(JSON.stringify(contactData));\n        setContactData({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          message: \"\"\n        });\n        toast('Mesaj göndərildi');\n      } else {\n        alert('xaiş edirik xanaların hamısını doldurun');\n      }\n    } else {\n      alert(\"Emaili doğru yazın\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    ref: myRef,\n    id: \"\\u018Flaq\\u0259\",\n    className: \"section-4 \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"\\u018Flaq\\u0259\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"three-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \" Ad:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setContactData({\n        name: e.target.value\n      });\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \" Email:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    onChange: function onChange(e) {\n      return setContactData({\n        email: e.target.value\n      });\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \" Telefon:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phone\",\n    type: \"number\",\n    onChange: function onChange(e) {\n      return setContactData({\n        phone: e.target.value\n      });\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \" Mesaj:\", /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"message\",\n    onChange: function onChange(e) {\n      return setContactData({\n        message: e.target.value\n      });\n    },\n    name: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return submitHandler();\n    },\n    id: \"btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"T\\u0259sdiq\")))))));\n};\n\nexport default ContactSection;","map":{"version":3,"names":["React","useRef","useState","functions","toast","ContactSection","myRef","name","email","phone","message","contactData","setContactData","re","console","log","test","submitHandler","xhttp","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","alert","e","target","value"],"sources":["/Users/Gadimlie/Desktop/react-entesk/entesk/src/component/ContactSection.jsx"],"sourcesContent":["import React,{useRef,useState} from 'react'\nimport functions from './functions';\nimport toast from 'react-hot-toast';\n\nconst ContactSection = ({myRef}) => {\n\n\n  const [contactData, setContactData] = useState({\n    name:\"\",\n    email:\"\",\n    phone:\"\",\n    message: \"\"\n  })\n  \n  let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  console.log(re.test(contactData.email))\n  const submitHandler = () =>{\n    if(re.test(contactData.email)){\n      if( contactData.name &&  contactData.phone){\n      const xhttp = new XMLHttpRequest();\n      // xhttp.open(\"POST\", \"https://infinite-castle-76696.herokuapp.com/send\");\n      xhttp.open(\"POST\", \"https://infinite-castle-76696.herokuapp.com/send\");\n      xhttp.setRequestHeader(\"Content-type\", 'application/json');\n      xhttp.send(JSON.stringify(contactData));\n      setContactData({\n        name:\"\",\n        email:\"\",\n        phone:\"\",\n        message: \"\"\n      })\n      toast('Mesaj göndərildi');\n    }else{\n      alert('xaiş edirik xanaların hamısını doldurun')\n    }\n    }else{\n      alert(\"Emaili doğru yazın\")\n    }\n  }\n \n\n  return (\n  <section ref={myRef} id=\"Əlaqə\" className=\"section-4 \" >\n    <div className=\"container\"  >\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"contact-text\">\n              <h3>Əlaqə</h3>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"form-div\">\n            <form action=\"\">\n              <div className=\"three-div\">\n                <label htmlFor=\"name\"> Ad:\n                  <input id=\"name\"   type=\"text\" onChange={(e) => setContactData({\n                    name:e.target.value\n                  })}  required />\n                </label>\n                <label htmlFor=\"Email\"> Email:\n                  <input id=\"email\" type=\"email\" onChange={(e) => setContactData({\n                    email:e.target.value\n                  })} required />\n                </label>\n                <label htmlFor=\"Phone\" > Telefon:\n                  <input id=\"phone\" type=\"number\" onChange={(e) => setContactData({\n                    phone:e.target.value\n                  })} required />\n                </label>\n              </div>\n              <label htmlFor=\"message\"> Mesaj:\n                <textarea id=\"message\" onChange={(e) => setContactData({\n                    message:e.target.value\n                  })} name=\"text\" ></textarea>\n              </label>\n\n            </form>\n            <button onClick={() => submitHandler()} id=\"btn\">Təsdiq</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  )\n}\n\nexport default ContactSection"],"mappings":"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"},"metadata":{},"sourceType":"module"}